workflows:
  ios-native-workflow:
    name: iOS Native
    max_build_duration: 120
    instance_type: mac_mini_m2
    #integrations:
      #app_store_connect: codemagic
    environment:
      #ios_signing:
        #distribution_type: app_store
        #bundle_identifier: io.codemagic.sample.iosnative
      vars:
        BUNDLE_ID: "io.codemagic.sample.iosnative"
        XCODE_WORKSPACE: "Client.xcworkspace" # <-- Put the name of your Xcode workspace here
        XCODE_SCHEME: "Client" #"CodemagicSample" # <-- Put the name of your Xcode scheme here
        #APP_STORE_APPLE_ID: 1555555551
      xcode: latest
      cocoapods: default
    scripts:
      #- name: Install CocoaPods dependencies
        #script: | 
          #pod install
      - name: Set up provisioning profiles settings on Xcode project
        script: xcode-project use-profiles
      #- name: Increment build number
        #script: | 
          #cd $CM_BUILD_DIR
          #LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_STORE_APPLE_ID")
          #agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Build ipa for distribution
        script: | 
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true
          failure: false
      #app_store_connect:
        #auth: integration

        # Configuration related to TestFlight (optional)
        # Note: This action is performed during post-processing.
        #submit_to_testflight: true
        #beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
          #- group name 1
          #- group name 2

        # Configuration related to App Store (optional)
        # Note: This action is performed during post-processing.
        #submit_to_app_store: false  
  ios-native-kozic:
    working_directory: firefox-ios
    environment:
      vars:
        BUNDLE_ID: "io.codemagic.sample.iosnative"
        XCODE_WORKSPACE: "Client.xcodeproj/project.xcworkspace" # xcworkspace # <-- Put the name of your Xcode workspace here
        XCODE_SCHEME: "Firefox" #"CodemagicSample" # <-- Put the name of your Xcode scheme here
        #APP_STORE_APPLE_ID: 1555555551
    scripts:
      - name: Build ipa for distribution
        script: | 
          # build using workspace
          xcodebuild build \
            -workspace "$CM_BUILD_DIR/firefox-ios/$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
      - name: Create a Payload directory and move the .app file into it
        script: | 
            # Locate the .app in the specified location
            BUILD_OUTPUT_DIR=$(find "$HOME/Library/Developer/Xcode/DerivedData" -path "*/Build/*" -type d -name "*.app" -print -quit)
            echo "Build output directory: $BUILD_OUTPUT_DIR"
    
            if [ -d "$BUILD_OUTPUT_DIR" ]; then
                # Create Payload directory
                mkdir -p Payload
    
                # Move the .app file to the Payload directory
                mv "$BUILD_OUTPUT_DIR" Payload/
                if [ $? -eq 0 ]; then
                    echo "App moved to Payload directory successfully."
                else
                    echo "Failed to move app to Payload directory."
                    exit 1
                fi
    
                # Zip the Payload directory
                zip -r RunnerTest.ipa Payload
                if [ $? -eq 0 ]; then
                    echo "IPA file created successfully: RunnerTest.ipa"
                else
                    echo "Failed to create IPA file."
                    exit 1
                fi
            else
                echo "Error: .app file not found in the specified location."
                exit 1
            fi
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
